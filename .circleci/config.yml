version: 2.1
commands:
  save_root_build_number:
    steps:
      - run:
          name: "Caching root build number for workflow"
          command: echo ${CIRCLE_BUILD_NUM} > /tmp/root-build-number
      - save_cache:
          key: v1-root-build-number-{{ .Revision }}
          paths:
            - /tmp/root-build-number
  restore_root_build_number:
    steps:
      - restore_cache:
          name: Restore cached /tmp/root-build-number file
          keys:
            - v1-root-build-number-{{ .Revision }}
  set_aws_prefix:
    steps:
      - run:
          name: Set the AWS_PREFIX
          command: |
            echo "export AWS_PREFIX=build-$(cat /tmp/root-build-number)-" >> $BASH_ENV

executors:
  default_executor:
    working_directory: ~/talis-cdk-constructs
    docker:
      - image: cimg/node:14.17.3
        auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD

orbs:
  node: circleci/node@4.5.1

jobs:
  fan_out:
    executor: default_executor
    steps:
      - run:
          command: echo "starting build"
      - save_root_build_number
  commit-lint-branch:
    executor: default_executor
    steps:
      - add_ssh_keys:
          fingerprints:
            - "ee:b4:00:e6:23:5b:55:bb:fd:07:bc:73:9e:f7:89:9c" # shared.aspire@talis.com 'talis-cdk-constructs Deploy Key'
      - checkout
      - node/install-packages
      - run:
          name: Lint all commits on the branch
          command: |
            FIRST_COMMIT=$(git merge-base main $CIRCLE_BRANCH)
            LAST_COMMIT=$(git rev-parse HEAD)
            echo "FIRST COMMIT: $FIRST_COMMIT"
            echo "LAST COMMIT : $LAST_COMMIT"
            npx commitlint --from $FIRST_COMMIT --to $LAST_COMMIT --verbose
  build:
    executor: default_executor
    steps:
      - add_ssh_keys:
          fingerprints:
            - "ee:b4:00:e6:23:5b:55:bb:fd:07:bc:73:9e:f7:89:9c" # shared.aspire@talis.com 'talis-cdk-constructs Deploy Key'
      - checkout
      - node/install-packages
      - run:
          name: Lint code before building, to lint only source files
          command: npm run lint
      - run:
          name: Build code
          command: npm run build
  deploy-lambda-worker:
    executor: default_executor
    steps:
      - add_ssh_keys:
          fingerprints:
            - "ee:b4:00:e6:23:5b:55:bb:fd:07:bc:73:9e:f7:89:9c" # shared.aspire@talis.com 'talis-cdk-constructs Deploy Key'
      - restore_root_build_number
      - set_aws_prefix
      - checkout
      - node/install-packages
      - run:
          name: Build and deploy lambda worker example code
          command: cd examples/simple-lambda-worker && npm install && npm run build && npx cdk --require-approval never deploy
  deploy-authenticated-api:
    executor: default_executor
    steps:
      - add_ssh_keys:
          fingerprints:
            - "ee:b4:00:e6:23:5b:55:bb:fd:07:bc:73:9e:f7:89:9c" # shared.aspire@talis.com 'talis-cdk-constructs Deploy Key'
      - restore_root_build_number
      - set_aws_prefix
      - checkout
      - node/install-packages
      - run:
          name: Build and deploy authenticated api example code
          command: cd examples/simple-authenticated-api && npm install && npm run build && npx cdk --require-approval never deploy
  test:
    executor: default_executor
    steps:
      - restore_root_build_number
      - set_aws_prefix
      - checkout
      - node/install-packages
      - run:
          name: Run unit tests
          command: npm run jest-unit-test -- --ci --maxWorkers=2
      - run:
          name: Run infra tests
          command: npm run jest-infra-test -- --ci --maxWorkers=2
      - run:
          name: Run integration tests
          command: npm run jest-integration-test -- --ci --maxWorkers=2
  destroy-lambda-worker:
    executor: default_executor
    steps:
      - add_ssh_keys:
          fingerprints:
            - "ee:b4:00:e6:23:5b:55:bb:fd:07:bc:73:9e:f7:89:9c" # shared.aspire@talis.com 'talis-cdk-constructs Deploy Key'
      - restore_root_build_number
      - set_aws_prefix
      - checkout
      - node/install-packages
      - run:
          name: Destroy lambda worker example code
          command: cd examples/simple-lambda-worker && npm install && npm run build && npx cdk --require-approval never destroy --force
  destroy-authenticated-api:
    executor: default_executor
    steps:
      - add_ssh_keys:
          fingerprints:
            - "ee:b4:00:e6:23:5b:55:bb:fd:07:bc:73:9e:f7:89:9c" # shared.aspire@talis.com 'talis-cdk-constructs Deploy Key'
      - restore_root_build_number
      - set_aws_prefix
      - checkout
      - node/install-packages
      - run:
          name: Destroy authenticated api example code
          command: cd examples/simple-authenticated-api && npm install && npm run build && npx cdk --require-approval never destroy --force
  semantic-release:
    executor: default_executor
    steps:
      - checkout
      - node/install-packages
      - run:
          name: Build code
          command: npm run build
      - run:
          name: Semantic Release
          command: npx semantic-release

workflows:
  build:
    jobs:
      - fan_out
      - commit-lint-branch:
          filters:
            branches:
              ignore:
                - main
                - /^dependabot-.*$/
      - be_kind_to_your_colleagues:
          type: approval
          filters:
            branches:
              ignore:
                - main
                - /^dependabot-.*$/
      - build:
          requires:
            - fan_out
            - be_kind_to_your_colleagues
          context:
            - cdk-deploy-to-shared-aspire-20211202
            - aws-region-eu
            - talis-cdk-constructs-build
      - deploy-lambda-worker:
          requires:
            - build
          context:
            - cdk-deploy-to-shared-aspire-20211202
            - aws-region-eu
            - talis-cdk-constructs-build
      - deploy-authenticated-api:
          requires:
            - build
          context:
            - cdk-deploy-to-shared-aspire-20211202
            - aws-region-eu
            - talis-cdk-constructs-build
      - test:
          requires:
            - deploy-lambda-worker
            - deploy-authenticated-api
          context:
            - cdk-deploy-to-shared-aspire-20211202
            - aws-region-eu
            - talis-cdk-constructs-build
      - destroy-lambda-worker:
          requires:
            - test
          context:
            - cdk-deploy-to-shared-aspire-20211202
            - aws-region-eu
            - talis-cdk-constructs-build
      - destroy-authenticated-api:
          requires:
            - test
          context:
            - cdk-deploy-to-shared-aspire-20211202
            - aws-region-eu
            - talis-cdk-constructs-build
      - semantic-release:
          requires:
            - destroy-lambda-worker
            - destroy-authenticated-api
          context:
            - cdk-deploy-to-shared-aspire-20211202
            - aws-region-eu
            - talis-cdk-constructs-build
